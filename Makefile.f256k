# To look at asm:
# mos-cx16-clang -Icx16 -Os -o /tmp/gob.s -Wl,--lto-emit-asm gob.c

# disassemble whole lot: (compile with -g!)
# llvm-objdump -dSr game.prg.elf >/tmp/game.s

BLD=build_f256k
EXP=export_f256k

SRCS = f256k/main_f256k.c \
	game.c gob.c player.c highscore.c input.c misc.c bub.c sfx.c story.c vfx.c draw_common.c \
	$(addprefix $(EXP)/, palette.c)
#SRCS_ASM = f256k/decompress_faster_v2.asm

EXPORTED_BINS = $(addprefix $(EXP)/, spr16.bin spr32.bin spr64x8.bin chars.bin)

# the game and data will be split up into 8KB chunks and compressed
COMPRESSED_CHUNKS = $(addprefix $(BLD)/, game_00.zbin game_01.zbin game_02.zbin \
					game_03.zbin game_04.zbin \
					spr16_00.zbin spr16_01.zbin spr16_02.zbin spr16_03.zbin \
					spr32.zbin spr64x8.zbin chars.zbin)


OBJ_FILES = $(addprefix $(BLD)/,$(SRCS:.c=.o))
OBJ_FILES += $(addprefix $(BLD)/,$(SRCS_ASM:.asm=.o))

CC := mos-f256k-clang
CFLAGS = -If256k -Os -flto -fno-builtin-memset
LDFLAGS = -flto
LDLIBS =
DEPFLAGS = -MMD -MP -MF $@.d

DEP_FILES = $(addsuffix .d,$(OBJ_FILES))


# scumbotron.bin will be the fully-built package
# (containing compressed game.bin, graphics and unpacking code).
# putting it all together...
$(BLD)/scumbotron.bin: $(COMPRESSED_CHUNKS) f256k/scumbotron.asm f256k/decompress_faster_v2.asm
	64tass -b -o $@ -I build_f256k f256k/scumbotron.asm

# chop game.bin and data into 8KB chunks and compress...
# note grouped rule (&). These will all be generated in one go.
$(COMPRESSED_CHUNKS) &: $(EXPORTED_BINS) $(BLD)/game.bin
	f256k/chunks.sh

# game.bin is the main game code, compiled with llvm-mos, and without graphics
$(BLD)/game.bin: $(OBJ_FILES)
	$(CC) $(CFLAGS) $(LDFLAGS) $^ $(LDLIBS) -o $@

$(BLD)/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(DEPFLAGS) -c $< -o $@

$(BLD)/%.o: %.asm
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -c $< -o $@

-include $(DEP_FILES)

# graphics exporting
$(EXP)/palette.c: sprites16.png
	tools/png2sprites -palette rgba -c -var export_palette_bin $< $@

#tools/png2sprites -w 16 -h 16 -num 128 -fmt 8bpp $< | split -b 8192 -d --additional-suffix .bin - $(EXP)/spr16_

# export 16x16 sprites 
$(EXP)/spr16.bin: sprites16.png
	tools/png2sprites -w 16 -h 16 -num 128 -fmt 8bpp $< $@

# export 32x32 sprites
$(EXP)/spr32.bin: sprites32.png
	tools/png2sprites -w 32 -h 32 -num 3 -fmt 8bpp $< $@

# export 64x8 sprites (for speech bubbles)
# use 8 8x8 sprites
$(EXP)/spr64x8.bin: sprites64x8.png
	tools/png2sprites -w 8 -h 8 -num 32 -fmt 8bpp $< $@

# export charset (will be compressed)
$(EXP)/chars.bin: chars.png
	tools/png2sprites -w 8 -h 8 -num 128 -fmt 1bpp $< $@


.PHONY: run
run: $(BLD)/scumbotron.bin
	$(HOME)/pubproj/junior-emulator/bin/jr256 $<@1000 boot@1000

.PHONY: clean
clean:
	- rm -rf $(BLD)

.PHONY: dump
dump: $(BLD)/game.bin.elf
	llvm-objdump -d --print-imm-hex $<

.PHONY: sections
sections: $(BLD)/game.bin.elf
	llvm-objdump -h $<

