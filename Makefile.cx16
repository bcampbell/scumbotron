EXPORT=cx16/export
SRCS_COMMON = game.c gob.c player.c
SRCS_SYS = cx16/sys_cx16.c cx16/irq.s cx16/glue.s
SRCS_EXPORT = $(EXPORT)/palette.c $(EXPORT)/spr16.c $(EXPORT)/spr32.c
INCS = gob.h player.h cx16/sys.h

SRCS = $(SRCS_COMMON) $(SRCS_SYS) $(SRCS_EXPORT)

game.prg: $(SRCS) $(INCS)
	mos-cx16-clang -Icx16 -Os -o game.prg $(SRCS)

# graphics exporting
$(EXPORT)/palette.bin: sprites16.png
	tools/png2sprites -palette -out $@ -fmt bin $<

$(EXPORT)/spr16.bin: sprites16.png
	tools/png2sprites -w 16 -h 16 -bpp 4 -num 64 -out $@ -fmt bin $<

$(EXPORT)/spr32.bin: sprites32.png
	tools/png2sprites -w 32 -h 32 -bpp 4 -num 8 -out $@ -fmt bin $<

# These two rules compress .bin files then convert them to .c source.
%.zbin: %.bin
	lzsa -f2 -r $< $@

%.c: %.zbin
	xxd -i -n export_`basename $<` $< $@

run: game.prg
	x16emu -prg game.prg -run


