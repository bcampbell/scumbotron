ifeq ($(strip $(DEVKITARM)),)
$(error "Please set DEVKITARM in your environment. export DEVKITARM=<path to>devkitARM")
endif

DEVKITPATH=$(shell echo "$(DEVKITPRO)" | sed -e 's/^\([a-zA-Z]\):/\/\1/')
export PATH	:=	$(DEVKITPATH)/tools/bin:$(DEVKITPATH)/devkitARM/bin:$(PATH)

#include $(DEVKITARM)/ds_rules

BUILD_DIR=build_nds
EXPORT_DIR=$(BUILD_DIR)/export

SRCS = nds/main.c game.c gob.c player.c
SRCS_EXPORT = $(addprefix $(EXPORT_DIR)/, palette.c spr16.c spr32.c spr32x8.c spr8x32.c chars.c)

OBJ_FILES = $(addprefix $(BUILD_DIR)/,$(SRCS:.c=.o))
OBJ_FILES += $(SRCS_EXPORT:.c=.o)

PREFIX := arm-none-eabi-
CC := $(PREFIX)gcc
#CXX	:=	$(PREFIX)g++
#AS	:=	$(PREFIX)as
#AR	:=	$(PREFIX)gcc-ar
#OBJCOPY	:=	$(PREFIX)objcopy
#STRIP	:=	$(PREFIX)strip
#NM	:=	$(PREFIX)gcc-nm
#RANLIB	:=	$(PREFIX)gcc-ranlib

LIBNDS=$(DEVKITPRO)/libnds

ARCH := -mthumb -mthumb-interwork
CFLAGS := -g -Wall -O2\
	-march=armv5te -mtune=arm946e-s -fomit-frame-pointer\
	-ffast-math \
	$(ARCH)
CFLAGS	= -Inds -DARM9 -I$(LIBNDS)/include
#CXXFLAGS	:= $(CFLAGS) -fno-rtti -fno-exceptions

ASFLAGS	:= -g $(ARCH)
#LDFLAGS	= -specs=ds_arm9.specs -g $(ARCH) -Wl,-Map,$(notdir $*.map)
LDFLAGS	= -specs=ds_arm9.specs -g $(ARCH)
LDFLAGS += -L$(LIBNDS)/lib
LDLIBS = -lnds9

#
DEPFLAGS = -MMD -MP -MF $@.d

DEP_FILES = $(addsuffix .d,$(OBJ_FILES))

$(BUILD_DIR)/game.nds: $(BUILD_DIR)/game.elf

$(BUILD_DIR)/game.elf: $(OBJ_FILES)
	@mkdir -p $(dir $@)
	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@

$(BUILD_DIR)/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(DEPFLAGS) -c $< -o $@

-include $(DEP_FILES)

# graphics exporting
$(EXPORT_DIR)/palette.bin: sprites16.png
	mkdir -p $(dir $@)
	tools/png2sprites -palette nds $< $@

$(EXPORT_DIR)/spr16.bin: sprites16.png
	mkdir -p $(dir $@)
	tools/png2sprites -w 16 -h 16 -num 64 -fmt nds4bpp $< $@

$(EXPORT_DIR)/spr32.bin: sprites32.png
	mkdir -p $(dir $@)
	tools/png2sprites -w 32 -h 32 -num 8 -fmt nds4bpp $< $@

$(EXPORT_DIR)/spr32x8.bin: hzapperbeam.png
	mkdir -p $(dir $@)
	tools/png2sprites -w 32 -h 8 -num 1 -fmt nds4bpp $< $@

$(EXPORT_DIR)/spr8x32.bin: vzapperbeam.png
	mkdir -p $(dir $@)
	tools/png2sprites -w 8 -h 32 -num 1 -fmt nds4bpp $< $@

$(EXPORT_DIR)/chars.bin: chars.png
	mkdir -p $(dir $@)
	tools/png2sprites -w 8 -h 8 -num 256 -fmt nds4bpp $< $@

%.c: %.bin
	xxd -i -n export_`basename $<` $< $@

GAME_ICON      :=      $(DEVKITPRO)/libnds/icon.bmp

%.nds: %.elf
	ndstool -c $@ -9 $< -b $(GAME_ICON) "Game;subtitle1;subtitle2"

.PHONY: clean
clean:
	- rm -rf $(BUILD_DIR)

.PHONY: run
run: $(BUILD_DIR)/game.nds
	desmume $<

